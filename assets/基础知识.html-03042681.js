import{_ as n,o as e,c as a,e as s}from"./app-04b0d2b0.js";const t={},c=s(`<h1 id="基础知识" tabindex="-1"><a class="header-anchor" href="#基础知识" aria-hidden="true">#</a> 基础知识</h1><h2 id="c-与-c" tabindex="-1"><a class="header-anchor" href="#c-与-c" aria-hidden="true">#</a> C 与 C++</h2><p>C：基于过程的 C++：面向对象</p><p>c 到 C++:增加了面向对象机制</p><p>​ 对c语言扩充</p><p>1、变量的定义可以出现在程序的任何行</p><p>2、提供了标准的输入输出流对象cin、cout</p><p>3、用 const 定义常量</p><p>4、函数重载、函数模版、带默认值的函数</p><p>5、引用类型</p><p>6、单目作用运算符</p><p>7、string 类型字符串</p><p>8、使用 new 和 delete 代替 malloc 和 free 函数</p><h2 id="第一行代码" tabindex="-1"><a class="header-anchor" href="#第一行代码" aria-hidden="true">#</a> 第一行代码</h2><p>程序示例HELLOW WORLD</p><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>

  cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;HELLOW WORLD!&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注释：</p><p>1、以 # 开头的语句：预处理指令，非必需，但是如果有就要放在开头，将”iostream“文件的内容到程序中</p><p>​ 头文件： <code>&lt;cstdio&gt;</code>, <code>&lt;cmath&gt;</code>, <code> &lt;cstdlib&gt;</code></p><p>2、使用命名空间 ”std“，namespace是c++特性，防止重名</p><p>​ 其他用法： <code>using std::cout;</code> <code> using std::cin;</code> <code>using std::endl;</code></p><p>3、<code>&lt;&lt;</code> 是插入运算符，将 ”HELLOW WORLD！“插入输出流，发送给 <code>cout</code> 打印 （运算符重载）</p><p>4、<code>return 0</code> 表示程序正常结束，非0表示异常结束，操作系统支持程序获得其他程序的退出代码</p><h2 id="c-代码风格" tabindex="-1"><a class="header-anchor" href="#c-代码风格" aria-hidden="true">#</a> C++ 代码风格</h2><ul><li>每条语句占一行</li><li>每个函数都有开始和结束的大括号</li><li>函数中的语句相较大括号缩进 &quot;Tab&quot; &quot;Shift + Tab&quot;</li><li>与函数名称相关的小括号周围没有空白</li><li>书写注释： <ul><li>单行注释 //</li><li>多行注释 /*</li></ul></li></ul><p>​ */</p><h2 id="c-的编译与执行" tabindex="-1"><a class="header-anchor" href="#c-的编译与执行" aria-hidden="true">#</a> C++ 的编译与执行</h2><p>编译：预处理（.ii）&gt;&gt; 编译（.s 汇编文件） &gt;&gt; 目标文件</p><p>连接：.s -&gt; .o(.obj)二进制文件（目标文件） 》.exe</p><p>​ 函数库 》.exe（可执行程序 ）</p><p>执行：</p>`,31),p=[c];function i(d,o){return e(),a("div",null,p)}const r=n(t,[["render",i],["__file","基础知识.html.vue"]]);export{r as default};
