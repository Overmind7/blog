import{_ as e,o as a,c as s,e as n}from"./app-04b0d2b0.js";const c={},d=n(`<h1 id="过滤数据" tabindex="-1"><a class="header-anchor" href="#过滤数据" aria-hidden="true">#</a> 过滤数据</h1><h2 id="_1-使用-where-子句" tabindex="-1"><a class="header-anchor" href="#_1-使用-where-子句" aria-hidden="true">#</a> 1. 使用 where 子句</h2><p>一般不需要所有的行，使用搜索条件进行过滤</p><p>在<code>SELECT</code>语句中，数据根据<code>WHERE</code>子句中指定的搜索条件进行过滤。</p><p><code>WHERE</code>子句在表名(<code>FROM</code>子句) 之后给出，如下所示:</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> prod_name<span class="token punctuation">,</span> prod_price
<span class="token keyword">from</span> products
<span class="token keyword">where</span> prod_price <span class="token operator">=</span> <span class="token number">2.50</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这条语句从products表中检索两个列，但不返回所有行，只返回prod_ price值为2. 50的行。</p><div class="custom-container warning"><p class="custom-container-title">\`WHERE\`子句的位置</p><p>在同时使用<code>ORDER BY</code>和<code>WHERE</code>子句时，应该让<code>ORDER BY</code>位于<code>WHERE</code>之后，否则将会产生错误。</p></div><h2 id="where-子句操作符" tabindex="-1"><a class="header-anchor" href="#where-子句操作符" aria-hidden="true">#</a> WHERE 子句操作符</h2><p><img src="https://raw.githubusercontent.com/Overmind7/images/main/img/image-20230919205747925.png" alt="image-20230919205747925"></p>`,10),o=[d];function r(i,t){return a(),s("div",null,o)}const l=e(c,[["render",r],["__file","过滤数据.html.vue"]]);export{l as default};
