import{_ as n,r as i,o as m,c as r,a as s,d as a,b as l,e}from"./app-04b0d2b0.js";const p={},c=s("h1",{id:"oneformer3d",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#oneformer3d","aria-hidden":"true"},"#"),a(" OneFormer3D")],-1),h=s("p",null,"CVPR 2023",-1),o={href:"https://paperswithcode.com/paper/scaling-up-kernels-in-3d-cnns",target:"_blank",rel:"noopener noreferrer"},g=e('<p><strong>摘要</strong>：对于3D点云的语义分割、实例分割和全景分割已经分别使用了特定设计的任务模型进行了研究。因此，所有分割任务的相似性和它们之间的隐含关系并未得到有效利用。本文提出了一个统一、简单而有效的模型，共同解决了所有这些任务。该模型被命名为OneFormer3D，使用一组可学习的核心一致地执行实例和语义分割，其中每个核心负责为实例或语义类别生成掩码。这些核心通过一个基于transformer的解码器进行训练，其中统一的实例和语义查询作为输入传递。这样的设计使得能够在单次运行中端到端地训练模型，从而在同时实现所有三个分割任务的最佳性能。具体而言，我们的OneFormer3D在ScanNet测试排行榜中获得了第一名，并取得了新的最先进水平（+2.1 mAP50）。我们还展示了在ScanNet（+21 PQ）、ScanNet200（+3.8 mAP50）和S3DIS（+0.8 mIoU）数据集的语义分割、实例分割和全景分割方面的最先进结果。</p><h2 id="解决的问题" tabindex="-1"><a class="header-anchor" href="#解决的问题" aria-hidden="true">#</a> 解决的问题：</h2><p>该论文要解决的问题是点云分割的问题，即如何将三维点云中的每个点分配到不同的语义或实例类别，从而实现对点云的理解和分析。点云分割是三维计算机视觉中的一个重要和具有挑战性的任务，它有着广泛的应用，如机器人导航、自动驾驶、增强现实等。点云分割的难点主要有以下几个方面：</p><ol><li>点云的表示方式多样，如稀疏体素、八叉树和点云，每种表示方式都有其优缺点，如何设计一个通用的模型，可以适应不同的点云表示，是一个关键的问题。</li><li>点云的数据量大，且具有不规则和无序的特点，如何有效地处理点云的数据结构，提取点云的特征，是一个核心的问题。</li><li>点云的分辨率和密度不均匀，且受到噪声和遮挡的影响，如何提高点云分割的鲁棒性和精度，是一个实际的问题。</li></ol><p>该论文的目标是提出一个基于Transformer的模型，可以统一处理不同的点云表示，利用自注意力机制和跨注意力机制，捕捉点云的局部和全局上下文信息，同时引入一个动态的点云采样模块，可以根据点云的密度和复杂度，自适应地调整采样率，从而解决点云分割的问题。</p><h2 id="主要贡献" tabindex="-1"><a class="header-anchor" href="#主要贡献" aria-hidden="true">#</a> 主要贡献：</h2><ol><li>它设计了一个通用的点云编码器，可以将不同的点云表示转换为一致的特征向量，从而实现跨表示的点云分割。</li><li>它提出了一个基于Transformer的点云解码器，可以利用自注意力机制和跨注意力机制，有效地捕捉点云的局部和全局上下文信息。</li><li>它引入了一个动态的点云采样模块，可以根据点云的密度和复杂度，自适应地调整采样率，从而提高模型的效率和鲁棒性。</li><li>它在多个点云分割的数据集上进行了实验，包括S3DIS、ScanNetv2、ShapeNetPart和PartNet，并在所有数据集上取得了最先进的性能，证明了其模型的优越性和通用性。</li></ol><h2 id="架构" tabindex="-1"><a class="header-anchor" href="#架构" aria-hidden="true">#</a> 架构</h2><p><img src="https://raw.githubusercontent.com/Overmind7/images/main/img/image-20240104135438667.png" alt="image-20240104135438667"></p><blockquote><p>OneFormer3D 框架基于 SPFormer（蓝色），但具有许多改进（红色）。一旦获得 3D 点云作为输入，我们训练的模型就可以解决 3D 实例、3D 语义和 3D 全景分割任务。虚线描绘了仅在训练期间应用的组件。</p></blockquote><ul><li>First, a sparse 3D U-net extracts point-wise features</li><li>Then, these features pass through a flexible pooling, that obtains superpoint features through simply averaging features of points in a superpoint. Superpoint features serve as keys and values for a transformer decoder (Sec. 3.2), that also accepts learnable semantic and instance queries as inputs.</li><li>The decoder captures superpoints information via a cross-attention mechanism, and outputs a set of learned kernels, each representing a single object mask of an instance identity (from an instance query) or a semantic region (from a semantic query.</li><li>A disentangled matching strategy is adopted to train instance kernels in an end-to-end manner (Sec. 3.3). As a result, a trained OneFormer3D can seamlessly solve semantic, instance, and panoptic segmentation (Sec. 3.4).</li><li>然后，这些特征通过flexible pooling灵活的池化，通过简单地平均超点中点的特征来获得Superpoint feature超点特征。 Superpoint 特征充当transformer解码器的key和value（第 3.2 节），它也接受可学习的语义和实例queries作为输入。</li><li>解码器通过交叉注意机制捕获超点信息，并输出一组学习内核，每个内核代表实例身份（来自实例查询）或语义区域（来自语义查询）的单个对象掩码。</li><li>解缠结匹配策略采用端到端的方式训练实例内核（第 3.3 节）。因此，经过训练的 OneFormer3D 可以无缝解决语义、实例和全景分割问题（第 3.4 节）。</li></ul><h3 id="sparse-3d-u-net" tabindex="-1"><a class="header-anchor" href="#sparse-3d-u-net" aria-hidden="true">#</a> Sparse 3D U-Net.</h3>',12),u=s("p",null,[a("假设输入点云包含N个点，则输入可以表示为"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"P"),s("mo",null,"∈"),s("msup",null,[s("mi",null,"R"),s("mrow",null,[s("mi",null,"N"),s("mo",null,"×"),s("mn",null,"6")])])]),s("annotation",{encoding:"application/x-tex"},"P \\in R^{N \\times 6}")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7224em","vertical-align":"-0.0391em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"P"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"∈"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8413em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.00773em"}},"R"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8413em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.10903em"}},"N"),s("span",{class:"mbin mtight"},"×"),s("span",{class:"mord mtight"},"6")])])])])])])])])])])]),a("。每个 3D 点都用三种颜色 r、g、b 和三个坐标 x、y、z 进行参数化。按照[6]，我们对点云进行体素化，并使用由稀疏 3D 卷积组成的类似 U-Net 的主干来提取逐点特征")],-1),d=s("h3",{id:"query-decoder",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#query-decoder","aria-hidden":"true"},"#"),a(" Query Decoder")],-1),v=s("p",null,[a("查询解码器将 $K_{ins} + K_{sem} $查询作为输入，并将其转换为 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"K"),s("mrow",null,[s("mi",null,"i"),s("mi",null,"n"),s("mi",null,"s")])]),s("mo",null,"+"),s("msub",null,[s("mi",null,"K"),s("mrow",null,[s("mi",null,"s"),s("mi",null,"e"),s("mi",null,"m")])])]),s("annotation",{encoding:"application/x-tex"},"K_{ins} + K_{sem}")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.07153em"}},"K"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3117em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0715em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"in"),s("span",{class:"mord mathnormal mtight"},"s")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.07153em"}},"K"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0715em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"se"),s("span",{class:"mord mathnormal mtight"},"m")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),a(" 内核。然后，超点特征与这些内核进行卷积，分别生成 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"K"),s("mrow",null,[s("mi",null,"i"),s("mi",null,"n"),s("mi",null,"s")])])]),s("annotation",{encoding:"application/x-tex"},"K_{ins}")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.07153em"}},"K"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3117em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0715em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"in"),s("span",{class:"mord mathnormal mtight"},"s")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),a(" 实例和 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"K"),s("mrow",null,[s("mi",null,"s"),s("mi",null,"e"),s("mi",null,"m")])])]),s("annotation",{encoding:"application/x-tex"},"K_{sem}")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.07153em"}},"K"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0715em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"se"),s("span",{class:"mord mathnormal mtight"},"m")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),a(" 语义掩码。")],-1),y=s("blockquote",null,[s("p",null,"Semantic queries语义查询是随机初始化的，与现有的 3D 实例分割方法相同?"),s("p",null,"通过交叉注意力学习")],-1),f=s("h3",{id:"query-selection",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#query-selection","aria-hidden":"true"},"#"),a(" Query selection")],-1),b=s("p",null,"最先进的 2D 对象检测和 2D 实例分割方法 [19,45,50] 使用高级策略初始化查询，通常称为查询选择。具体来说，输入查询使用来自转换器编码器的特征进行初始化，并根据对象分数进行采样。该分数是由同一模型估计的，该模型由训练期间额外的客观性损失引导。事实证明，所描述的技术可以加快训练速度，同时共同提高整体准确性。然而，据我们所知，类似的方法从未应用于 3D 对象检测或 3D 分割。",-1),_=s("p",null,"因此，我们的目标是通过适用于 3D 数据的查询选择的简化版本和非变换器编码器来缩小这一差距。特别是，我们在灵活池化后使用骨干特征初始化查询。通过查询选择，我们仅随机选择一半的初始化查询，以在训练期间进行额外的增强。在推理过程中，我们类似地初始化查询，但不过滤查询以保留所有输入信息。",-1),w=s("h1",{id:"spformer",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#spformer","aria-hidden":"true"},"#"),a(" SPFormer")],-1),x={href:"https://paperswithcode.com/paper/superpoint-transformer-for-3d-scene-instance",target:"_blank",rel:"noopener noreferrer"},z=s("p",null,"Superpoint Transformer for 3D Scene Instance Segmentation",-1),k=s("p",null,"AAAI 2023",-1),S=e('<h2 id="摘要" tabindex="-1"><a class="header-anchor" href="#摘要" aria-hidden="true">#</a> 摘要</h2><p>大多数现有方法通过扩展用于 3D 对象检测或 3D 语义分割的模型来实现 3D 实例分割。然而，这些非直接方法有两个缺点：</p><p>1）不精确的边界框或不令人满意的语义预测限制了整个 3D 实例分割框架的性能。</p><p>2）现有方法需要耗时的聚合中间步骤。</p><p>为了解决这些问题，本文提出了一种基于 Superpoint Transformer的新颖的端到端3D实例分割方法，命名为SPFormer。它将点云中的潜在特征分组为 Superpoint，并通过查询向量直接预测实例，而不依赖于对象检测或语义分割的结果。该框架的关键步骤是一种带有 Transformer 的新型查询解码器，它可以通过 superpoint 交叉注意机制捕获实例信息并生成实例的 Superpoint 掩码。通过基于 superpoint 掩码的二分匹配，SPFormer 可以实现无需中间聚合步骤的网络训练，从而加速网络。 ScanNetv2 和 S3DIS 基准的大量实验验证了我们的方法简洁而高效。值得注意的是，SPFormer 在 ScanNetv2 隐藏测试集上的 mAP 超过了最先进的方法 4.3%，同时保持了快速的推理速度（每帧 247 毫秒）</p><blockquote><p>提出一个混合框架，避免缺点并同时从两种类型的方法中受益。两阶段端到端的 3D 实例分割方法：SPFormer。 SPFormer 将点云中自下而上的潜在特征分组为超级点，并通过查询向量作为自上而下的管道提出实例。</p></blockquote><h2 id="method" tabindex="-1"><a class="header-anchor" href="#method" aria-hidden="true">#</a> Method</h2><p><img src="https://raw.githubusercontent.com/Overmind7/images/main/img/image-20240104142224787.png" alt="image-20240104142224787"></p><blockquote><p>SPFormer的整体架构，包含两个阶段。在自下而上的分组阶段，稀疏3D U-net从输入点云P中提取逐点特征，然后超点池化层将同质相邻点分组为超点特征S。在自上而下的提议阶段，查询解码器为分为两个分支。实例分支通过 Transformer Decoder 获取查询向量特征 Z’。 mask 分支提取 mask-aware 特征 Smask。最后，预测头生成实例预测，并在训练/推理期间将它们输入到二分匹配或排名中。</p></blockquote><h3 id="query-decoder-1" tabindex="-1"><a class="header-anchor" href="#query-decoder-1" aria-hidden="true">#</a> Query Decoder</h3><p>查询解码器由实例分支和掩码分支组成。</p>',11),M=s("p",null,[a("在掩模分支中，一个简单的多层感知器（MLP）旨在提取掩模感知特征"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"S"),s("mrow",null,[s("mi",null,"m"),s("mi",null,"a"),s("mi",null,"s"),s("mi",null,"k")])])]),s("annotation",{encoding:"application/x-tex"},"S_{mask}")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.05764em"}},"S"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3361em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0576em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"ma"),s("span",{class:"mord mathnormal mtight"},"s"),s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.03148em"}},"k")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),a("。")],-1),P=s("p",null,"实例分支由一系列 Transformer 解码器层组成。通过超点交叉注意力来解码可学习的查询向量。假设有 K 个可学习的查询向量。我们将每个 Transformer 解码器层的查询向量的特征预定义为 D 是嵌入维数",-1),N=s("p",null,[s("strong",null,"考虑到 Superpoint 的无序性和数量的不确定性"),a("，引入 Transformer 结构来处理变长输入。Superpoint 的潜在特征和可学习的查询向量被用作变压器解码器的输入。我们修改后的 Transformer 解码器层的详细架构如下图所示：")],-1),D=s("img",{src:"https://raw.githubusercontent.com/Overmind7/images/main/img/image-20240104142507489.png",alt:"image-20240104142507489",style:{zoom:"50%"}},null,-1),T=s("div",{class:"custom-container warning"},[s("p",{class:"custom-container-title"},"WARNING"),s("p",null,"In addition, because the input is the potential features of superpoints, we empirically remove position embedding."),s("p",null,[s("em",null,"《Masked-attention mask transformer for universal image segmentation》CVPR2022")])],-1),q=s("p",null,"查询向量在训练前随机初始化，每个点云的实例信息只能通过超点交叉注意力获得，因此，与标准解码器层相比，我们的 Transformer 解码器层交换了自注意力层和交叉注意力层的顺序",-1),V=s("p",null,[a("经过线性投影后的 Superpoint 特征"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msup",null,[s("mi",null,"S"),s("mo",{mathvariant:"normal",lspace:"0em",rspace:"0em"},"′")])]),s("annotation",{encoding:"application/x-tex"},"S'")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7519em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.05764em"}},"S"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.7519em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},"′")])])])])])])])])])])]),a(" ，来自上一层的查询向量 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"Z"),s("mrow",null,[s("mi",null,"l"),s("mo",null,"−"),s("mn",null,"1")])])]),s("annotation",{encoding:"application/x-tex"},"Z_{l-1}")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8917em","vertical-align":"-0.2083em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.07153em"}},"Z"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3361em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0715em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mbin mtight"},"−"),s("span",{class:"mord mtight"},"1")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2083em"}},[s("span")])])])])])])])]),a(" 通过 Superpoint 交叉注意机制捕获上下文信息，可以表示为：")],-1),F=s("img",{src:"https://raw.githubusercontent.com/Overmind7/images/main/img/image-20240104143304087.png",alt:"image-20240104143304087",style:{zoom:"50%"}},null,-1),H=s("h4",{id:"shared-prediction-head",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#shared-prediction-head","aria-hidden":"true"},"#"),a(" Shared Prediction Head")],-1),O=s("img",{src:"https://raw.githubusercontent.com/Overmind7/images/main/img/image-20240104150958286.png",alt:"image-20240104150958286",style:{zoom:"50%"}},null,-1),C=s("p",null,[a("使用来自实例分支的查询向量 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msup",null,[s("mi",null,"Z"),s("mo",{mathvariant:"normal",lspace:"0em",rspace:"0em"},"′")])]),s("annotation",{encoding:"application/x-tex"},"Z'")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7519em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.07153em"}},"Z"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.7519em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},"′")])])])])])])])])])])]),a("，我们使用两个独立的 MLP 来预测每个查询向量的分类 ，并使用 IoU 感知分数分别。")],-1),L=s("p",null,"此外，提案的排名深刻地影响实例分割结果，",-1),K=s("ul",null,[s("li",null,"而在实践中，由于一对一的匹配方式，大多数提案会被视为背景，这导致提案质量排名的错位。"),s("li",null,"因此，我们设计了一个分数分支来估计预测的超点mask和gt-mask的 IoU，以补偿未对准misalignment.。"),s("li",null,[a("mask-aware features "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"S")]),s("annotation",{encoding:"application/x-tex"},"S")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05764em"}},"S")])])]),a("​, directly multiply it by query vectors Z‘ followed a sigmoid function to generate superpoint masks prediction M‘")])],-1),I=e('<hr><h1 id="稀疏卷积后端" tabindex="-1"><a class="header-anchor" href="#稀疏卷积后端" aria-hidden="true">#</a> 稀疏卷积后端</h1><p>构建一个稀疏卷积需要满足哪些要求:</p><ol><li>减少不必要的运算量。</li></ol><ol start="2"><li>满足特征的稀疏性，并且在保证稀疏性的同时维护特征的空间不变性。</li></ol><h2 id="_1-minkengine" tabindex="-1"><a class="header-anchor" href="#_1-minkengine" aria-hidden="true">#</a> 1. MinkEngine</h2>',6),R=s("p",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"C"),s("mo",null,"="),s("mrow",null,[s("mo",{fence:"true"},"["),s("mtable",{rowspacing:"0.16em",columnalign:"center center center center",columnspacing:"1em"},[s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("msub",null,[s("mi",null,"x"),s("mn",null,"1")])])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("msub",null,[s("mi",null,"y"),s("mn",null,"1")])])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("msub",null,[s("mi",null,"z"),s("mn",null,"1")])])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("msub",null,[s("mi",null,"b"),s("mn",null,"1")])])])]),s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mrow")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mo",{lspace:"0em",rspace:"0em"},":")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mo",{lspace:"0em",rspace:"0em"},":")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mrow")])])]),s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("msub",null,[s("mi",null,"x"),s("mi",null,"N")])])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("msub",null,[s("mi",null,"y"),s("mi",null,"N")])])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("msub",null,[s("mi",null,"z"),s("mi",null,"N")])])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("msub",null,[s("mi",null,"b"),s("mi",null,"N")])])])])]),s("mo",{fence:"true"},"]")])]),s("annotation",{encoding:"application/x-tex"},"C = \\left[ \\begin{matrix} x_1 & y_1 & z_1 & b_1\\\\ & : & : & \\\\ x_N & y_N & z_N & b_N \\end{matrix} \\right]")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.07153em"}},"C"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"3.6em","vertical-align":"-1.55em"}}),s("span",{class:"minner"},[s("span",{class:"mopen"},[s("span",{class:"delimsizing mult"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"2.05em"}},[s("span",{style:{top:"-4.05em"}},[s("span",{class:"pstrut",style:{height:"5.6em"}}),s("span",{style:{width:"0.667em",height:"3.600em"}},[s("svg",{xmlns:"http://www.w3.org/2000/svg",width:"0.667em",height:"3.600em",viewBox:"0 0 667 3600"},[s("path",{d:`M403 1759 V84 H666 V0 H319 V1759 v0 v1759 h347 v-84
H403z M403 1759 V0 H319 V1759 v0 v1759 h84z`})])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.55em"}},[s("span")])])])])]),s("span",{class:"mord"},[s("span",{class:"mtable"},[s("span",{class:"col-align-c"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"2.05em"}},[s("span",{style:{top:"-4.21em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"x"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"1")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])]),s("span",{style:{top:"-3.01em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"})]),s("span",{style:{top:"-1.81em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"x"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3283em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.10903em"}},"N")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.55em"}},[s("span")])])])]),s("span",{class:"arraycolsep",style:{width:"0.5em"}}),s("span",{class:"arraycolsep",style:{width:"0.5em"}}),s("span",{class:"col-align-c"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"2.05em"}},[s("span",{style:{top:"-4.21em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"y"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0359em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"1")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])]),s("span",{style:{top:"-3.01em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mrel"},":")])]),s("span",{style:{top:"-1.81em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"y"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3283em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0359em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.10903em"}},"N")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.55em"}},[s("span")])])])]),s("span",{class:"arraycolsep",style:{width:"0.5em"}}),s("span",{class:"arraycolsep",style:{width:"0.5em"}}),s("span",{class:"col-align-c"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"2.05em"}},[s("span",{style:{top:"-4.21em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.04398em"}},"z"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.044em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"1")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])]),s("span",{style:{top:"-3.01em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mrel"},":")])]),s("span",{style:{top:"-1.81em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.04398em"}},"z"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3283em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.044em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.10903em"}},"N")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.55em"}},[s("span")])])])]),s("span",{class:"arraycolsep",style:{width:"0.5em"}}),s("span",{class:"arraycolsep",style:{width:"0.5em"}}),s("span",{class:"col-align-c"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"2.05em"}},[s("span",{style:{top:"-4.21em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"b"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"1")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])]),s("span",{style:{top:"-3.01em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"})]),s("span",{style:{top:"-1.81em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"b"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3283em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.10903em"}},"N")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.55em"}},[s("span")])])])])])]),s("span",{class:"mclose"},[s("span",{class:"delimsizing mult"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"2.05em"}},[s("span",{style:{top:"-4.05em"}},[s("span",{class:"pstrut",style:{height:"5.6em"}}),s("span",{style:{width:"0.667em",height:"3.600em"}},[s("svg",{xmlns:"http://www.w3.org/2000/svg",width:"0.667em",height:"3.600em",viewBox:"0 0 667 3600"},[s("path",{d:`M347 1759 V0 H0 V84 H263 V1759 v0 v1759 H0 v84 H347z
M347 1759 V0 H263 V1759 v0 v1759 h84z`})])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.55em"}},[s("span")])])])])])])])])]),a(","),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"F"),s("mo",null,"="),s("mrow",null,[s("mo",{fence:"true"},"["),s("mtable",{rowspacing:"0.16em",columnalign:"center",columnspacing:"1em"},[s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("msubsup",null,[s("mi",null,"f"),s("mn",null,"1"),s("mi",null,"T")])])])]),s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mo",{lspace:"0em",rspace:"0em"},":")])])]),s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("msubsup",null,[s("mi",null,"f"),s("mi",null,"N"),s("mi",null,"T")])])])])]),s("mo",{fence:"true"},"]")])]),s("annotation",{encoding:"application/x-tex"},"F = \\left[ \\begin{matrix} f_1^T \\\\ : \\\\ f_N^T \\end{matrix} \\right]")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"F"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"3.6027em","vertical-align":"-1.5513em"}}),s("span",{class:"minner"},[s("span",{class:"mopen"},[s("span",{class:"delimsizing mult"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"2.05em"}},[s("span",{style:{top:"-4.05em"}},[s("span",{class:"pstrut",style:{height:"5.6em"}}),s("span",{style:{width:"0.667em",height:"3.600em"}},[s("svg",{xmlns:"http://www.w3.org/2000/svg",width:"0.667em",height:"3.600em",viewBox:"0 0 667 3600"},[s("path",{d:`M403 1759 V84 H666 V0 H319 V1759 v0 v1759 h347 v-84
H403z M403 1759 V0 H319 V1759 v0 v1759 h84z`})])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.55em"}},[s("span")])])])])]),s("span",{class:"mord"},[s("span",{class:"mtable"},[s("span",{class:"col-align-c"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"2.0513em"}},[s("span",{style:{top:"-4.21em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8413em"}},[s("span",{style:{top:"-2.4519em","margin-left":"-0.1076em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"1")])]),s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.13889em"}},"T")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2481em"}},[s("span")])])])])])])]),s("span",{style:{top:"-3.01em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mrel"},":")])]),s("span",{style:{top:"-1.8087em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8413em"}},[s("span",{style:{top:"-2.4247em","margin-left":"-0.1076em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.10903em"}},"N")])]),s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.13889em"}},"T")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2753em"}},[s("span")])])])])])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.5513em"}},[s("span")])])])])])]),s("span",{class:"mclose"},[s("span",{class:"delimsizing mult"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"2.05em"}},[s("span",{style:{top:"-4.05em"}},[s("span",{class:"pstrut",style:{height:"5.6em"}}),s("span",{style:{width:"0.667em",height:"3.600em"}},[s("svg",{xmlns:"http://www.w3.org/2000/svg",width:"0.667em",height:"3.600em",viewBox:"0 0 667 3600"},[s("path",{d:`M347 1759 V0 H0 V84 H263 V1759 v0 v1759 H0 v84 H347z
M347 1759 V0 H263 V1759 v0 v1759 h84z`})])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.55em"}},[s("span")])])])])])])])])])],-1),A=s("p",null,[a("其中 (x,y,z) 表示点云的坐标， b 表示 属于batch中的哪个点云 (MinkowskiEngine也是把点云组织成batch进行训练)， "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"N")]),s("annotation",{encoding:"application/x-tex"},"N")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"N")])])]),a(" 表示1个batch中所有点的数量， "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msubsup",null,[s("mi",null,"f"),s("mi",null,"n"),s("mi",null,"i")])]),s("annotation",{encoding:"application/x-tex"},"f^i_n")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.0717em","vertical-align":"-0.247em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8247em"}},[s("span",{style:{top:"-2.453em","margin-left":"-0.1076em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"n")])]),s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"i")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.247em"}},[s("span")])])])])])])])]),a(" 表示第 i 个点的特征，可以是1维或者3维或者其它维度的。")],-1),G=e('<h3 id="sparse-tensor-quantization" tabindex="-1"><a class="header-anchor" href="#sparse-tensor-quantization" aria-hidden="true">#</a> Sparse Tensor Quantization</h3><p>数据处理以生成稀疏张量</p><p>将所有坐标转换为哈希键，并找到所有唯一的哈希键标签对以消除冲突。</p><h3 id="generalized-sparse-convolution" tabindex="-1"><a class="header-anchor" href="#generalized-sparse-convolution" aria-hidden="true">#</a> Generalized Sparse Convolution</h3><ul><li><p>根据输入坐标 Cin（Eq.3）生成输出坐标 Cout。</p></li><li><p>使用指定的内核映射将输入与内核进行卷积</p></li></ul><h3 id="pooling" tabindex="-1"><a class="header-anchor" href="#pooling" aria-hidden="true">#</a> Pooling</h3><h3 id="non-spatial-funtions" tabindex="-1"><a class="header-anchor" href="#non-spatial-funtions" aria-hidden="true">#</a> Non-spatial Funtions</h3><h2 id="_2-spconv" tabindex="-1"><a class="header-anchor" href="#_2-spconv" aria-hidden="true">#</a> 2. SpConv</h2>',8),E={href:"https://github.com/traveller59/spconv",target:"_blank",rel:"noopener noreferrer"},U={href:"https://zhuanlan.zhihu.com/p/467167809?utm_id=0",target:"_blank",rel:"noopener noreferrer"},B=e('<div class="custom-container tip"><p class="custom-container-title">什么是（submanifold）子流形？</p><blockquote><p>We use the term &#39;submanifold&#39; to refer to input data that is sparse because it has a lower effective dimension than the space in which it lives, for example a one-dimensional curve in 2+ dimensional space, or a two-dimensional surface in 3+ dimensional space.</p></blockquote><p>我们使用术语“子流形”来表示输入数据是稀疏的，因为它的有效维数低于它所在的空间，例如二维空间中的一维曲线，或三维空间中的二维曲面。</p></div><h3 id="建立输入哈希表" tabindex="-1"><a class="header-anchor" href="#建立输入哈希表" aria-hidden="true">#</a> 建立输入哈希表</h3><p><img src="https://raw.githubusercontent.com/Overmind7/images/main/img/v2-7f35a88cbb6169a64e5e2b1fa9f1f477_1440w.png" alt="img"></p><p>首先，稀疏卷积操作会将输入转化为Hash_in这张输入哈希表，hash_in表示着<strong>activate输入</strong>的标志（也就是说对应的这个稀疏输入是需要被计算的）。</p><p>对于P1点而言，在hash_in中对应了v=0 key=(2,1)。其对应的输出tensor中与P1有关的像素点为A1的六个位置那么将这些点视作作为P_out。以此类推P2也会拥有一系列P2_out的点。将这些Pout点合并后可以获得Hash_out表。</p><p>构建hash表的最重要原因是我们在前面提到的在完成稀疏卷积后为了防止稀疏特征的塌缩失去几何特征的表示能力，这里将Tensor的坐标与序号进行对应，方便卷积计算好数值之后将其放回原本tensor的位置。</p><h3 id="建立rulebook" tabindex="-1"><a class="header-anchor" href="#建立rulebook" aria-hidden="true">#</a> 建立RuleBook</h3><p>在第一步中，我们成功的建立了输入和输出的哈希表。这两个表分别将输入和输出的Tensor坐标映射到了序号，但是这两张表之间的序号是不统一的现在需要额外构建一张rulebook表将输入和输出这两张表对应起来。</p><p><img src="https://raw.githubusercontent.com/Overmind7/images/main/img/v2-d81a7da1dc790606281f1452fa5056b0_1440w.png" alt="img"></p><p>上图显示了构建Rulebook的整体流程，其中分为两个主要部分。</p><p>第一，将Pout转化到GetOffset(Pin, P)；</p><p>第二，从GetOffSet(Pin, P)转化到Rulebook。</p><ul><li><p>首先来看如何构建GetOffset（Pin, P）这个函数。假如以Pout(0,0)为例，在这个橙色的窗口中只有右侧P1位置非零，其余位置均为零。那么这次卷积操作只需要通过这个位置的卷积权重和输入值计算得到。P1位置对应到卷积核中的位置就是（1，0）。我们把这个（1，0）放入GetOffset()结果中。</p></li><li><p>将GetOffset()进一步得到Rulebook</p><ul><li>在上一步中我们根据Pin与Pout获得GetOffset()，那么这个获得的方法就可以总结成Rulebook。我们可以看到Rulebook中第一列为上一步记录的卷积核权重位置，第三列为输入像素值的输入序号，第四列为卷积结果对应的输出序号,count为各个卷积权重的数量统计。</li></ul></li></ul><p>稀疏卷积在GPU中的运算是通过查询Rulebook实现的，以<em>Rulebook</em>第一行红色方框为例，首先通过（-1，-1）找到卷积核权重F0；其次，根据输入像素序号，查找输入哈希表找到对应的tensor向量（0.1，0.1，0.1）</p><p><img src="https://raw.githubusercontent.com/Overmind7/images/main/img/v2-8b3177a25ee2a768a6d57e626aed7ed1_1440w.png" alt="img"></p><h2 id="_3-torchsparse" tabindex="-1"><a class="header-anchor" href="#_3-torchsparse" aria-hidden="true">#</a> 3. TorchSparse</h2>',16),Z={href:"https://paperswithcode.com/paper/torchsparse-efficient-point-cloud-inference",target:"_blank",rel:"noopener noreferrer"},W={href:"https://paperswithcode.com/paper/torchsparse-efficient-training-and-inference",target:"_blank",rel:"noopener noreferrer"},Q=s("p",null,"TorchSparse的优化策略包括：",-1),$=s("ol",null,[s("li",null,"采用自适应的矩阵乘法分组，提高计算的规则性；"),s("li",null,"采用量化，向量化和局部性感知的内存访问，减少数据移动的开销；"),s("li",null,"采用内核融合，减少映射操作的延迟")],-1),j=s("p",null,"TorchSparse++:",-1),J=s("ol",null,[s("li",null,"提出了一个稀疏核生成器，可以快速生成高性能的稀疏卷积核，降低了工程复杂度；"),s("li",null,"设计了一个稀疏自动调优器，可以在扩大的设计空间中搜索最佳的数据流配置，适应不同的训练和推理工作负载。")],-1);function X(Y,ss){const t=i("ExternalLinkIcon");return m(),r("div",null,[c,s("blockquote",null,[h,s("p",null,[s("a",o,[a("LargeKernel3D: Scaling up Kernels in 3D Sparse CNNs | Papers With Code"),l(t)])])]),g,u,d,v,y,f,b,_,w,s("blockquote",null,[s("p",null,[s("a",x,[a("Superpoint Transformer for 3D Scene Instance Segmentation | Papers With Code"),l(t)])]),z,k]),S,M,P,N,D,T,q,V,F,H,O,C,L,K,I,R,A,G,s("blockquote",null,[s("p",null,[s("a",E,[a("traveller59/spconv: Spatial Sparse Convolution Library (github.com)"),l(t)])]),s("p",null,[s("a",U,[a("spConv稀疏卷积 - 知乎 (zhihu.com)"),l(t)])])]),B,s("blockquote",null,[s("p",null,[s("a",Z,[a("TorchSparse: Efficient Point Cloud Inference Engine | Papers With Code"),l(t)])]),s("p",null,[s("a",W,[a("TorchSparse++: Efficient Training and Inference Framework for Sparse Convolution on GPUs | Papers With Code"),l(t)])])]),Q,$,j,J])}const ts=n(p,[["render",X],["__file","1.3.html.vue"]]);export{ts as default};
