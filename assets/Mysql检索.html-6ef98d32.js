import{_ as s,o as e,c as a,e as n}from"./app-04b0d2b0.js";const d={},l=n(`<h1 id="检索数据" tabindex="-1"><a class="header-anchor" href="#检索数据" aria-hidden="true">#</a> 检索数据</h1><h2 id="_1-select-语句" tabindex="-1"><a class="header-anchor" href="#_1-select-语句" aria-hidden="true">#</a> 1. SELECT 语句</h2><p>Mysql检索：为了使用SELECT检索表数据，必须至少给出两条信息-</p><ul><li>想选择什么，</li><li>从什么地方选择。</li></ul><h2 id="_2-检索单个列" tabindex="-1"><a class="header-anchor" href="#_2-检索单个列" aria-hidden="true">#</a> 2. 检索单个列</h2><p>从 product 表中选择3列</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> prode_name <span class="token keyword">from</span> products<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><p>未排序数据：如果没有明确排序查询结果，返回的数据顺序不定？</p></li><li><p>多条SQL语句以分号间隔</p></li><li><p>SQL语句不区分大小写</p></li></ul><h2 id="_3-检索多个列" tabindex="-1"><a class="header-anchor" href="#_3-检索多个列" aria-hidden="true">#</a> 3. 检索多个列</h2><p>select 关键字后给出多个列名，以逗号分隔</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> prod_id<span class="token punctuation">,</span> prod_name<span class="token punctuation">,</span> prod_price 
<span class="token keyword">from</span> products<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-检索所有列" tabindex="-1"><a class="header-anchor" href="#_4-检索所有列" aria-hidden="true">#</a> 4. 检索所有列</h2><p>使用通配符 <code>*</code>，返回表中所有列，顺序一般是列在表定义中出现的顺序</p><ul><li>使用通配符可以检索出名字未知的列，但是慎用，降低性能</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> 
<span class="token keyword">from</span> products<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-检索不同的行" tabindex="-1"><a class="header-anchor" href="#_5-检索不同的行" aria-hidden="true">#</a> 5. 检索不同的行</h2><p><code>select</code> 返回所有匹配的行，如何检索不同的值</p><p>解决办法是使用<code>DISTINCT</code>关键字，顾名思义，此关键字指示MySQL只返回不同的值。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token keyword">DISTINCT</span> vend_id 
<span class="token keyword">from</span> products<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container warning"><p class="custom-container-title">不能部分使用distinct</p><p>DISTINCT关键字应用于所有列而不仅是前置它的列</p></div><h2 id="_6-限制结果" tabindex="-1"><a class="header-anchor" href="#_6-限制结果" aria-hidden="true">#</a> 6. 限制结果</h2><p><code>select</code> 返回所有匹配的行，如何返回第一行或前几行，用 LIMIT</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> prod_name
<span class="token keyword">from</span> products
<span class="token keyword">LIMIT</span> <span class="token number">5</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此语句使用SELECT语句检索单个列。<code>LIMIT 5</code>指示MySQL返回不多于5行。</p><p>得到下一个5行：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> prod_name
<span class="token keyword">from</span> products
<span class="token keyword">LIMIT</span> <span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>从行5开始的5行，第一个参数为开始的位置</p><div class="custom-container warning"><p class="custom-container-title">行0</p><p>第一行为行0而不是行1，从0开始计数。</p></div><h2 id="_7-使用完全限定的表名" tabindex="-1"><a class="header-anchor" href="#_7-使用完全限定的表名" aria-hidden="true">#</a> 7. 使用完全限定的表名</h2><p>上面使用列名引用列，也可以用完全限定的名字引用列</p><ul><li><strong>完全限定的名字：同时使用表名和列字</strong></li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> products<span class="token punctuation">.</span>prod_name
<span class="token keyword">from</span> products<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,32),i=[l];function c(r,o){return e(),a("div",null,i)}const p=s(d,[["render",c],["__file","Mysql检索.html.vue"]]);export{p as default};
