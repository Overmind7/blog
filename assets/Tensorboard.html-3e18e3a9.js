import{_ as n,o as s,c as a,e as t}from"./app-04b0d2b0.js";const e={},p=t(`<h1 id="使用-tensorboard-可视化" tabindex="-1"><a class="header-anchor" href="#使用-tensorboard-可视化" aria-hidden="true">#</a> 使用 tensorboard 可视化</h1><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> tensorboardX <span class="token keyword">import</span> SummaryWriter
<span class="token keyword">from</span> torch<span class="token punctuation">.</span>autograd <span class="token keyword">import</span> Variable
<span class="token comment"># 模拟输入</span>
dummy_input <span class="token operator">=</span> Variable<span class="token punctuation">(</span>torch<span class="token punctuation">.</span>rand<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">64</span><span class="token punctuation">,</span><span class="token number">64</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
dummy_input2 <span class="token operator">=</span> Variable<span class="token punctuation">(</span>torch<span class="token punctuation">.</span>rand<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment"># print(dummy_input)</span>
model <span class="token operator">=</span> pos_est<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token string">&quot;cpu&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">(</span><span class="token string">&quot;cpu&quot;</span><span class="token punctuation">)</span>
pred <span class="token operator">=</span> model<span class="token punctuation">.</span>forward<span class="token punctuation">(</span>dummy_input<span class="token punctuation">,</span>dummy_input<span class="token punctuation">,</span>dummy_input2<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>pred<span class="token punctuation">.</span>shape<span class="token punctuation">)</span>
<span class="token keyword">with</span> SummaryWriter<span class="token punctuation">(</span>comment<span class="token operator">=</span><span class="token string">&#39;pos&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> w<span class="token punctuation">:</span>
    w<span class="token punctuation">.</span>add_graph<span class="token punctuation">(</span>model<span class="token punctuation">,</span> <span class="token punctuation">(</span>dummy_input<span class="token punctuation">,</span> dummy_input<span class="token punctuation">,</span>dummy_input2<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在终端输入</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>tensorboard <span class="token parameter variable">--logdir</span><span class="token operator">=</span>./runs
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><img src="https://raw.githubusercontent.com/Overmind7/images/main/img/202210101513287.png" alt="image-20221010151255237" style="zoom:50%;"><h2 id="如何关闭tensorboard服务器" tabindex="-1"><a class="header-anchor" href="#如何关闭tensorboard服务器" aria-hidden="true">#</a> 如何关闭Tensorboard服务器</h2><p>获取正在运行的tensorboard进程详情 ps -ef|grep tensorboard</p><p>样本输出 <em>：uzzal_x+ 4585 4413 0 02:46 pts/4 00:00:01 bin/python /bin/tensorboard --logdir=runs/ 使用pid</em>*（进程id）杀死进程**</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">kill</span> <span class="token parameter variable">-9</span> <span class="token operator">&lt;</span>pid<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>第一个数字4585是我当前的tensorflow的pid ———————————————— 版权声明：本文为CSDN博主「shuaiqidexiaojiejie」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。 原文链接：https://blog.csdn.net/shuaiqidexiaojiejie/article/details/131000622</p>`,10),o=[p];function c(i,u){return s(),a("div",null,o)}const l=n(e,[["render",c],["__file","Tensorboard.html.vue"]]);export{l as default};
